{
  "AppSettings": {
    "ExerciseCollection": {
      "Categories": [
        // Category - Strings
        {
          "Name": "strings",
          "Exercises": [
            {
              "Description": "Reverse a string",
              "Solutions": [
                {
                  "Description": "Using loop and char array.",
                  "MethodName": "ReverseAString"
                },
                {
                  "Description": "Using Array.Reverse function.",
                  "MethodName": "ReverseAStringUsingArrayReverse"
                },
                {
                  "Description": "Using LINQ IEnumerable Reverse function.",
                  "MethodName": "ReverseAStringUsingLINQ"
                }
              ]
            },
            {
              "Description": "Check if word is a palindrome (Is a word that has the same spelling from front to back and vice versa)",
              "Solutions": [
                {
                  "Description": "Using a loop.",
                  "MethodName": "StringIsPalindrome"
                },
                {
                  "Description": "Using LINQ IEnumerable SequenceEqual and Reverse functions.",
                  "MethodName": "StringIsPalindromeUsingLINQ"
                }
              ]
            },
            {
              "Description": "Reverse the order of words in a given string.",
              "Solutions": [
                {
                  "Description": "Using a loop and StringBuilder to append.",
                  "MethodName": "ReverseOrderOfWordsInSentence"
                },
                {
                  "Description": "Using Split and StringBuilder Append functions.",
                  "MethodName": "ReverseOrderOfWordsInSentenceUsingSplitAndStringBuilder"
                }
              ]
            },
            {
              "Description": "Reverse each word individually without changing its position in the sentence.",
              "Solutions": [
                {
                  "Description": "Using a loops, temporary char type list and StringBuilder to append.",
                  "MethodName": "ReverseEachWordInAString"
                },
                {
                  "Description": "Using Split and StringBuilder Append functions.",
                  "MethodName": "ReverseEachWordInAStringUsingSplitAndStringBuilder"
                }
              ]
            },
            {
              "Description": "Find the count of each character (occurence) in a string",
              "Solutions": [
                {
                  "Description": "Using a loop and Dictionary to store characters and their occurence counter",
                  "MethodName": "CharacterOccurrencesInString"
                },
                {
                  "Description": "Utilizing LINQ functionalities",
                  "MethodName": "CharacterOccurrencesInStringUsingLINQ"
                },
                {
                  "Description": "Using a placeholder list of chars",
                  "MethodName": "CharacterOccurrencesInStringUsingASeparatePlaceholderList"
                }
              ]
            },
            {
              "Description": "Remove duplicate character values from the input string",
              "Solutions": [
                {
                  "Description": "Using a loop, and string Contains function",
                  "MethodName": "RemoveDuplicateCharactersFromString"
                },
                {
                  "Description": "Using a HashSet to store non-duplicate characters values",
                  "MethodName": "RemoveDuplicateCharactersFromStringUsingHashSet"
                },
                {
                  "Description": "Using LINQ DistinctBy and string Join function to solve the exercise with a one-liner",
                  "MethodName": "RemoveDuplicateCharactersFromStringLINQ"
                }
              ]
            },
            {
              "Description": "Find all the substrings present in a given string",
              "Solutions": [
                {
                  "Description": "Using loops and string Substring function",
                  "MethodName": "FindAllSubstringsFromString"
                },
                {
                  "Description": "Using loops and StringBuilder to continually Append and form a new string",
                  "MethodName": "FindAllSubstringsFromStringUsingStringBuilder"
                }
              ]
            }
          ]
        },
        // Category - Numbers
        {
          "Name": "numbers",
          "Exercises": [
            {
              "Description": "Check if number is a prime number or not?",
              "Solutions": [
                {
                  "Description": "Using loop and remainder operator",
                  "MethodName": "CheckIfNumberIsPrime"
                }
              ]
            }
          ]
        }
      ]
    },
    "HelpCommandCollection": {
      "HelpCommands": [
        {
          "Name": "help",
          "Description": "Lists available helper commands that can be invoked."
        },
        {
          "Name": "how",
          "Description": "Provides an explanation how to form a command to invoke exercise solution."
        },
        {
          "Name": "list",
          "Description": "Displays a complete list of all categories, with all exercises and their solutions."
        },
        {
          "Name": "quit",
          "Description": "Exits the application."
        }
      ]
    }
  }
}